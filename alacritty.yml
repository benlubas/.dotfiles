# Configuration for Alacritty, the GPU enhanced terminal emulator.

window:
  decorations: full # full or none
  opacity: 1.0
  title: Alacritty # Window title
  dynamic_title: false

scrolling:
  history: 20000 # lines
  multiplier: 3 # scrolling distance multiplier

font:
  normal:
    family: JetBrainsMono Nerd Font
  size: 13 # point
  builtin_box_drawing: true


draw_bold_text_with_bright_colors: true
# Moonfly colors from https://github.com/bluz71/vim-moonfly-colors/blob/master/terminal_themes/alacritty.yml
# with a slightly lighter background
colors:
  primary:
    background:        '#101010'
    foreground:        '#b2b2b2'
    bright_foreground: '#eeeeee'

  cursor:
    text:   '#101010'
    cursor: '#9e9e9e'

  selection:
    text:       '#101010'
    background: '#b2ceee'

  normal:
    black:   '#323437'
    red:     '#ff5454'
    green:   '#8cc85f'
    yellow:  '#e3c78a'
    blue:    '#80a0ff'
    magenta: '#cf87e8'
    cyan:    '#79dac8'
    white:   '#c6c6c6'

  bright:
    black:   '#949494'
    red:     '#ff5189'
    green:   '#36c692'
    yellow:  '#c2c292'
    blue:    '#74b2ff'
    magenta: '#ae81ff'
    cyan:    '#85dc85'
    white:   '#e4e4e4'

selection:
  save_to_clipboard: true

# Key bindings
key_bindings:
  - { key: Left,     mods: Alt,     chars: "\x1bb"                       } # Skip word left
  - { key: Right,    mods: Alt,     chars: "\x1bf"                       } # Skip word right
  - { key: Left,     mods: Command, chars: "\x1bOH",   mode: AppCursor   } # Home
  - { key: Right,    mods: Command, chars: "\x1bOF",   mode: AppCursor   } # End
  - { key: Back,     mods: Command, chars: "\x15"                        } # Delete line
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    } # Delete word 
  - { key: Space,    mods: Control, chars: "\x00" } # allows ctrl space to be tmux prefix

#debug:
# Display the time it takes to redraw each frame.
#render_timer: false

# Keep the log file after quitting Alacritty.
#persistent_logging: false

# Log level
#
# Values for `log_level`:
#   - Off
#   - Error
#   - Warn
#   - Info
#   - Debug
#   - Trace
#log_level: Warn

# Print all received window events.
#print_events: false

# Highlight window damage information.
#highlight_damage: falsel   - _ Underline
#   - | Beam
#shape: Block

# Cursor blinking state
#
# Values for `blinking`:
#   - Never: Prevent the cursor from ever blinking
#   - Off: Disable blinking by default
#   - On: Enable blinking by default
#   - Always: Force the cursor to always blink
#blinking: Off

# Vi mode cursor style
#
# If the vi mode cursor style is `None` or not specified, it will fall back to
# the style of the active value of the normal cursor.
#
# See `cursor.style` for available options.
#vi_mode_style: None

# Cursor blinking interval in milliseconds.
#blink_interval: 750

# Time after which cursor stops blinking, in seconds.
#
# Specifying '0' will disable timeout for blinking.
#blink_timeout: 5

# If this is `true`, the cursor will be rendered as a hollow box when the
# window is not focused.
#unfocused_hollow: true

# Thickness of the cursor relative to the cell width as floating point number
# from `0.0` to `1.0`.
#thickness: 0.15

# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g.
# `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
# shell.
#
# Default:
#   - (Linux/BSD/macOS) `$SHELL` or the user's login shell, if `$SHELL` is unset
#   - (Windows) powershell

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

# Offer IPC using `alacritty msg` (unix only)
#ipc_socket: true

#mouse:
# Click settings
#
# The `double_click` and `triple_click` settings control the time
# alacritty should wait for accepting multiple clicks as one double
# or triple click.
#double_click: { threshold: 300 }
#triple_click: { threshold: 300 }

# If this is `true`, the cursor is temporarily hidden when typing.
#hide_when_typing: false

# Hints
#
# Terminal hints can be used to find text or hyperlink in the visible part of
# the terminal and pipe it to other applications.
#hints:
# Keys used for the hint labels.
#alphabet: "jfkdls;ahgurieowpq"

# List with all available hints
#
# Each hint must have any of `regex` or `hyperlinks` field and either an
# `action` or a `command` field. The fields `mouse`, `binding` and
# `post_processing` are optional.
#
# The `hyperlinks` option will cause OSC 8 escape sequence hyperlinks to be
# highlighted.
#
# The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
# `mouse.mods` accept the same values as they do in the `key_bindings` section.
#
# The `mouse.enabled` field controls if the hint should be underlined while
# the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
#
# If the `post_processing` field is set to `true`, heuristics will be used to
# shorten the match if there are characters likely not to be part of the hint
# (e.g. a trailing `.`). This is most useful for URIs and applies only to
# `regex` matches.
#
# Values for `action`:
#   - Copy
#       Copy the hint's text to the clipboard.
#   - Paste
#       Paste the hint's text to the terminal or search.
#   - Select
#       Select the hint's text.
#   - MoveViModeCursor
#       Move the vi mode cursor to the beginning of the hint.
#enabled:
# - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
#           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^ï¿½
